steps:
  ### Build docker container
  - id: 'building'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/combined', '.']
    dir: 'tech-manager-ticket'

  ### Publish to GCR
  - id: 'pushing'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/combined']
    dir: 'tech-manager-ticket'

  ### Deploy to kubernetes
  - id: 'Deploying-to-kubernetes'
    name: 'gcr.io/cloud-builders/gcloud'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_CLOUDSDK_COMPUTE_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLOUDSDK_CONTAINER_CLUSTER}'
      - 'KUBECONFIG=/kube/config'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud config set project ${_CLOUDSDK_PROJECT_ID}
        CLUSTER=$$(gcloud config get-value container/cluster)
        PROJECT=$$(gcloud config get-value core/project)
        ZONE=$$(gcloud config get-value compute/zone)

        gcloud container clusters get-credentials "$${CLUSTER}" \
          --project "$${PROJECT}" \
          --zone "$${ZONE}"  


        sed -i 's|eu.gcr.io/PROJECT_ID/${_CLOUDSDK_REPO_NAME}:.*|eu.gcr.io/${_CLOUDSDK_PROJECT_ID}/${_CLOUDSDK_REPO_NAME}:${BRANCH_NAME}${TAG_NAME}-${SHORT_SHA}|' ./builder/k8s/*.yml
        sed -i "s/ENVIRONMENT/${_CLOUDSDK_ENVIRONMENT}/g" ./builder/k8s/*.yaml
        sed -i "s/API_DOMAIN_NAME/${_CLOUDSDK_DOMAIN_NAME_API}/g" ./builder/k8s/*.yaml

        kubectl apply -f builder/k8s/deployment.yml
        kubectl apply -f builder/k8s/loadbalancer.yaml
        kubectl get deploy --output name | grep "${_CLOUDSDK_REPO_NAME}" | \
          xargs -n1 -t \
          kubectl rollout status --timeout=300s
